// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolsticeCodeChallengeWebAPI.Models;

namespace SolsticeCodeChallengeWebAPI.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    partial class ContactDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SolsticeCodeChallengeWebAPI.Models.Address", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<long>("AddresssContactForeignKey");

                    b.Property<string>("City");

                    b.Property<string>("State");

                    b.HasKey("id");

                    b.HasIndex("AddresssContactForeignKey")
                        .IsUnique();

                    b.ToTable("ContactAddress");
                });

            modelBuilder.Entity("SolsticeCodeChallengeWebAPI.Models.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Company")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("ProfileImageURL");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SolsticeCodeChallengeWebAPI.Models.ContactPhone", b =>
                {
                    b.Property<long>("ContactPhoneid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ContactPhonesContactForeignKey");

                    b.Property<string>("PersonalPhone");

                    b.Property<string>("WorkPhone");

                    b.HasKey("ContactPhoneid");

                    b.HasIndex("ContactPhonesContactForeignKey")
                        .IsUnique();

                    b.ToTable("ContactPhones");
                });

            modelBuilder.Entity("SolsticeCodeChallengeWebAPI.Models.Address", b =>
                {
                    b.HasOne("SolsticeCodeChallengeWebAPI.Models.Contact", "Contact")
                        .WithOne("Address")
                        .HasForeignKey("SolsticeCodeChallengeWebAPI.Models.Address", "AddresssContactForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SolsticeCodeChallengeWebAPI.Models.ContactPhone", b =>
                {
                    b.HasOne("SolsticeCodeChallengeWebAPI.Models.Contact", "Contact")
                        .WithOne("ContactPhone")
                        .HasForeignKey("SolsticeCodeChallengeWebAPI.Models.ContactPhone", "ContactPhonesContactForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
